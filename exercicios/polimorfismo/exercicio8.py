# ‚úÖ Exerc√≠cio 1: Sistema de C√°lculo de Sal√°rio de Funcion√°rios
# Objetivo: Modelar diferentes tipos de funcion√°rios em uma empresa. Todos s√£o "funcion√°rios", mas a forma de calcular o pagamento de cada um √© diferente. Uma classe abstrata √© perfeita para garantir que todo funcion√°rio saiba como "calcular seu pagamento".

# üìã Enunciado:

# Crie uma classe abstrata Funcionario que herda de ABC.

# No construtor (__init__), ela deve receber nome e matricula.

# Ela deve ter um m√©todo concreto chamado exibir_dados(), que imprime o nome, a matr√≠cula e o resultado do c√°lculo do pagamento.

# Ela deve ter um m√©todo abstrato chamado calcular_pagamento(self), que ser√° implementado pelas subclasses.

# Crie tr√™s classes concretas que herdam de Funcionario:

# FuncionarioFixo: Al√©m de nome e matr√≠cula, recebe um salario_base no construtor. O m√©todo calcular_pagamento simplesmente retorna este sal√°rio base.

# FuncionarioComissionado: Al√©m de nome e matr√≠cula, recebe um salario_base, uma comissao por venda e um numero_de_vendas. O calcular_pagamento deve retornar o salario_base + (comissao * numero_de_vendas).

# FuncionarioHorista: Al√©m de nome e matr√≠cula, recebe um valor_hora e o total_de_horas_trabalhadas. O calcular_pagamento deve retornar valor_hora * total_de_horas_trabalhadas.